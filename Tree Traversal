LEVEL ORDER OF BINARY TREE:
  vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*>q;
        vector<vector<int>>ans;
        if(root==NULL)
            return {};
        q.push(root);
       
        while(!q.empty())
        {
             int s=size(q);
             vector<int>a;
            for(auto i=0;i<s;i++){
            auto top=q.front();
            a.push_back(top->val);
            q.pop();
            if(top -> left) q.push(top -> left);
			if(top -> right) q.push(top -> right);
           
            }
            
            ans.push_back(a);
        }
        reverse(ans.begin(),ans.end());
        return ans;
     
LEVEL ORDER OF N-ARY:
  vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>>ans;
        if(!root)return ans;
         queue<Node*>q;
        q.push(root);
        while(q.empty()==false){
            int sz=q.size();
            vector<int>v;
            for(int i=0;i<sz;i++)
            {
                Node* node=q.front();
                 v.push_back(node->val);
                q.pop();
                 for(auto it:node->children)
                    {   
                        q.push(it);
                     }
            }
            ans.push_back(v);
           }
        
        return ans;
