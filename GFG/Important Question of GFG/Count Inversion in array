// if(i<j) and array[i]>array[j] this is called inversion.
#include <bits/stdc++.h>
EX: a=[2,4,1,3,5]
ans=3   (2,1), (4,1), (4,3)
-------------------------------------Using Merge Sort------------------------
TC: o(Nlogn)
SC: O(n)
using namespace std;
int mergeAndCount(int a[], int l, int m, int r)
{
    int n1=m-l+1;
    int n2=r-m;
    int left[n1], right[n2];
    for(int i=0;i<n1;i++)left[i]=a[l+i];
    
    
    
    for(int j=0;j<n2;j++)
    {
        right[j]=a[m+1+j];
        
    }
   
    int res=0, i=0,j=0,k=l;
    while(i<n1 && j<n2)
    {
        if(left[i]<=right[j])
        {
            a[k]=left[i];
            i++;
        }
        else if(left[i]>right[j])
        {
            a[k]=right[j];
            j++;
            res+=(n1-i);
            
        }
        k++;
    }
    while(i<n1){
        a[k]=left[i];i++;k++;
    }
     while(j<n2){
        a[k]=right[j];j++;k++;
    }
    return res;
}
int  mergeSort(int a[],int l, int r)
{
    int res=0;
    if(l<r)
    
    {
        int m=l+(r-l)/2;
        res+=mergeSort(a,l,m);
        res+=mergeSort(a,m+1,r);
        res+=mergeAndCount(a,l,m,r);
    }
    return res;
}
int main()
{
   int a[]={2,5,8,11,3,6,9,13};
   int n=sizeof(a)/sizeof(a[0]);
   cout<<mergeSort(a,0,n-1);
   
   
}
